/*
 * Opdex Platform API
 *
 * The Opdex Platform Web API is an interface for querying information from the Opdex contract indexer and quoting Opdex smart contract transactions. The Opdex contract indexer is a job that continually runs and stores relevant broadcast transaction data, in a way that represents the current known state of the Opdex protocol at the present time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Opdex.Client.Client.FileParameter;
using OpenAPIDateConverter = Opdex.Client.Client.OpenAPIDateConverter;

namespace Opdex.Client.Model
{
    /// <summary>
    /// Opdex event type identifier
    /// </summary>
    /// <value>Opdex event type identifier</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TransactionEventType
    {
        /// <summary>
        /// Enum CreateMarketEvent for value: CreateMarketEvent
        /// </summary>
        [EnumMember(Value = "CreateMarketEvent")]
        CreateMarketEvent = 1,

        /// <summary>
        /// Enum SetPendingDeployerOwnershipEvent for value: SetPendingDeployerOwnershipEvent
        /// </summary>
        [EnumMember(Value = "SetPendingDeployerOwnershipEvent")]
        SetPendingDeployerOwnershipEvent = 2,

        /// <summary>
        /// Enum ClaimPendingDeployerOwnershipEvent for value: ClaimPendingDeployerOwnershipEvent
        /// </summary>
        [EnumMember(Value = "ClaimPendingDeployerOwnershipEvent")]
        ClaimPendingDeployerOwnershipEvent = 3,

        /// <summary>
        /// Enum CreateLiquidityPoolEvent for value: CreateLiquidityPoolEvent
        /// </summary>
        [EnumMember(Value = "CreateLiquidityPoolEvent")]
        CreateLiquidityPoolEvent = 4,

        /// <summary>
        /// Enum SetPendingMarketOwnershipEvent for value: SetPendingMarketOwnershipEvent
        /// </summary>
        [EnumMember(Value = "SetPendingMarketOwnershipEvent")]
        SetPendingMarketOwnershipEvent = 5,

        /// <summary>
        /// Enum ClaimPendingMarketOwnershipEvent for value: ClaimPendingMarketOwnershipEvent
        /// </summary>
        [EnumMember(Value = "ClaimPendingMarketOwnershipEvent")]
        ClaimPendingMarketOwnershipEvent = 6,

        /// <summary>
        /// Enum ChangeMarketPermissionEvent for value: ChangeMarketPermissionEvent
        /// </summary>
        [EnumMember(Value = "ChangeMarketPermissionEvent")]
        ChangeMarketPermissionEvent = 7,

        /// <summary>
        /// Enum AddLiquidityEvent for value: AddLiquidityEvent
        /// </summary>
        [EnumMember(Value = "AddLiquidityEvent")]
        AddLiquidityEvent = 8,

        /// <summary>
        /// Enum RemoveLiquidityEvent for value: RemoveLiquidityEvent
        /// </summary>
        [EnumMember(Value = "RemoveLiquidityEvent")]
        RemoveLiquidityEvent = 9,

        /// <summary>
        /// Enum SwapEvent for value: SwapEvent
        /// </summary>
        [EnumMember(Value = "SwapEvent")]
        SwapEvent = 10,

        /// <summary>
        /// Enum StartStakingEvent for value: StartStakingEvent
        /// </summary>
        [EnumMember(Value = "StartStakingEvent")]
        StartStakingEvent = 11,

        /// <summary>
        /// Enum StopStakingEvent for value: StopStakingEvent
        /// </summary>
        [EnumMember(Value = "StopStakingEvent")]
        StopStakingEvent = 12,

        /// <summary>
        /// Enum CollectStakingRewardsEvent for value: CollectStakingRewardsEvent
        /// </summary>
        [EnumMember(Value = "CollectStakingRewardsEvent")]
        CollectStakingRewardsEvent = 13,

        /// <summary>
        /// Enum StartMiningEvent for value: StartMiningEvent
        /// </summary>
        [EnumMember(Value = "StartMiningEvent")]
        StartMiningEvent = 14,

        /// <summary>
        /// Enum StopMiningEvent for value: StopMiningEvent
        /// </summary>
        [EnumMember(Value = "StopMiningEvent")]
        StopMiningEvent = 15,

        /// <summary>
        /// Enum CollectMiningRewardsEvent for value: CollectMiningRewardsEvent
        /// </summary>
        [EnumMember(Value = "CollectMiningRewardsEvent")]
        CollectMiningRewardsEvent = 16,

        /// <summary>
        /// Enum EnableMiningEvent for value: EnableMiningEvent
        /// </summary>
        [EnumMember(Value = "EnableMiningEvent")]
        EnableMiningEvent = 17,

        /// <summary>
        /// Enum ApprovalEvent for value: ApprovalEvent
        /// </summary>
        [EnumMember(Value = "ApprovalEvent")]
        ApprovalEvent = 18,

        /// <summary>
        /// Enum TransferEvent for value: TransferEvent
        /// </summary>
        [EnumMember(Value = "TransferEvent")]
        TransferEvent = 19,

        /// <summary>
        /// Enum DistributionEvent for value: DistributionEvent
        /// </summary>
        [EnumMember(Value = "DistributionEvent")]
        DistributionEvent = 20,

        /// <summary>
        /// Enum RewardMiningPoolEvent for value: RewardMiningPoolEvent
        /// </summary>
        [EnumMember(Value = "RewardMiningPoolEvent")]
        RewardMiningPoolEvent = 21,

        /// <summary>
        /// Enum NominationEvent for value: NominationEvent
        /// </summary>
        [EnumMember(Value = "NominationEvent")]
        NominationEvent = 22,

        /// <summary>
        /// Enum CreateVaultCertificateEvent for value: CreateVaultCertificateEvent
        /// </summary>
        [EnumMember(Value = "CreateVaultCertificateEvent")]
        CreateVaultCertificateEvent = 23,

        /// <summary>
        /// Enum RevokeVaultCertificateEvent for value: RevokeVaultCertificateEvent
        /// </summary>
        [EnumMember(Value = "RevokeVaultCertificateEvent")]
        RevokeVaultCertificateEvent = 24,

        /// <summary>
        /// Enum RedeemVaultCertificateEvent for value: RedeemVaultCertificateEvent
        /// </summary>
        [EnumMember(Value = "RedeemVaultCertificateEvent")]
        RedeemVaultCertificateEvent = 25,

        /// <summary>
        /// Enum SetPendingVaultOwnershipEvent for value: SetPendingVaultOwnershipEvent
        /// </summary>
        [EnumMember(Value = "SetPendingVaultOwnershipEvent")]
        SetPendingVaultOwnershipEvent = 26,

        /// <summary>
        /// Enum ClaimPendingVaultOwnershipEvent for value: ClaimPendingVaultOwnershipEvent
        /// </summary>
        [EnumMember(Value = "ClaimPendingVaultOwnershipEvent")]
        ClaimPendingVaultOwnershipEvent = 27,

        /// <summary>
        /// Enum CreateVaultProposalEvent for value: CreateVaultProposalEvent
        /// </summary>
        [EnumMember(Value = "CreateVaultProposalEvent")]
        CreateVaultProposalEvent = 28,

        /// <summary>
        /// Enum CompleteVaultProposalEvent for value: CompleteVaultProposalEvent
        /// </summary>
        [EnumMember(Value = "CompleteVaultProposalEvent")]
        CompleteVaultProposalEvent = 29,

        /// <summary>
        /// Enum VaultProposalPledgeEvent for value: VaultProposalPledgeEvent
        /// </summary>
        [EnumMember(Value = "VaultProposalPledgeEvent")]
        VaultProposalPledgeEvent = 30,

        /// <summary>
        /// Enum VaultProposalWithdrawPledgeEvent for value: VaultProposalWithdrawPledgeEvent
        /// </summary>
        [EnumMember(Value = "VaultProposalWithdrawPledgeEvent")]
        VaultProposalWithdrawPledgeEvent = 31,

        /// <summary>
        /// Enum VaultProposalVoteEvent for value: VaultProposalVoteEvent
        /// </summary>
        [EnumMember(Value = "VaultProposalVoteEvent")]
        VaultProposalVoteEvent = 32,

        /// <summary>
        /// Enum VaultProposalWithdrawVoteEvent for value: VaultProposalWithdrawVoteEvent
        /// </summary>
        [EnumMember(Value = "VaultProposalWithdrawVoteEvent")]
        VaultProposalWithdrawVoteEvent = 33

    }

}
