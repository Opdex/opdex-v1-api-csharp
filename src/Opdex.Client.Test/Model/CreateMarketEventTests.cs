/*
 * Opdex Platform API
 *
 * The Opdex Platform Web API is an interface for querying information from the Opdex contract indexer and quoting Opdex smart contract transactions. The Opdex contract indexer is a job that continually runs and stores relevant broadcast transaction data, in a way that represents the current known state of the Opdex protocol at the present time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Opdex.Client.Api;
using Opdex.Client.Model;
using Opdex.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Opdex.Client.Test.Model
{
    /// <summary>
    ///  Class for testing CreateMarketEvent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateMarketEventTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreateMarketEvent
        //private CreateMarketEvent instance;

        public CreateMarketEventTests()
        {
            // TODO uncomment below to create an instance of CreateMarketEvent
            //instance = new CreateMarketEvent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateMarketEvent
        /// </summary>
        [Fact]
        public void CreateMarketEventInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreateMarketEvent
            //Assert.IsType<CreateMarketEvent>(instance);
        }


        /// <summary>
        /// Test the property 'Market'
        /// </summary>
        [Fact]
        public void MarketTest()
        {
            // TODO unit test for the property 'Market'
        }
        /// <summary>
        /// Test the property 'Owner'
        /// </summary>
        [Fact]
        public void OwnerTest()
        {
            // TODO unit test for the property 'Owner'
        }
        /// <summary>
        /// Test the property 'Router'
        /// </summary>
        [Fact]
        public void RouterTest()
        {
            // TODO unit test for the property 'Router'
        }
        /// <summary>
        /// Test the property 'AuthPoolCreators'
        /// </summary>
        [Fact]
        public void AuthPoolCreatorsTest()
        {
            // TODO unit test for the property 'AuthPoolCreators'
        }
        /// <summary>
        /// Test the property 'AuthProviders'
        /// </summary>
        [Fact]
        public void AuthProvidersTest()
        {
            // TODO unit test for the property 'AuthProviders'
        }
        /// <summary>
        /// Test the property 'AuthTraders'
        /// </summary>
        [Fact]
        public void AuthTradersTest()
        {
            // TODO unit test for the property 'AuthTraders'
        }
        /// <summary>
        /// Test the property 'TransactionFeePercent'
        /// </summary>
        [Fact]
        public void TransactionFeePercentTest()
        {
            // TODO unit test for the property 'TransactionFeePercent'
        }
        /// <summary>
        /// Test the property 'StakingToken'
        /// </summary>
        [Fact]
        public void StakingTokenTest()
        {
            // TODO unit test for the property 'StakingToken'
        }
        /// <summary>
        /// Test the property 'EnableMarketFee'
        /// </summary>
        [Fact]
        public void EnableMarketFeeTest()
        {
            // TODO unit test for the property 'EnableMarketFee'
        }
        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Fact]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }
        /// <summary>
        /// Test the property 'Contract'
        /// </summary>
        [Fact]
        public void ContractTest()
        {
            // TODO unit test for the property 'Contract'
        }
        /// <summary>
        /// Test the property 'SortOrder'
        /// </summary>
        [Fact]
        public void SortOrderTest()
        {
            // TODO unit test for the property 'SortOrder'
        }

    }

}
