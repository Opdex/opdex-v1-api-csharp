/*
 * Opdex Platform API
 *
 * The Opdex Platform Web API is an interface for querying information from the Opdex contract indexer and quoting Opdex smart contract transactions. The Opdex contract indexer is a job that continually runs and stores relevant broadcast transaction data, in a way that represents the current known state of the Opdex protocol at the present time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Opdex.Client.Api;
using Opdex.Client.Model;
using Opdex.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Opdex.Client.Test.Model
{
    /// <summary>
    ///  Class for testing LiquidityPoolResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LiquidityPoolResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for LiquidityPoolResponse
        //private LiquidityPoolResponse instance;

        public LiquidityPoolResponseTests()
        {
            // TODO uncomment below to create an instance of LiquidityPoolResponse
            //instance = new LiquidityPoolResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LiquidityPoolResponse
        /// </summary>
        [Fact]
        public void LiquidityPoolResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" LiquidityPoolResponse
            //Assert.IsType<LiquidityPoolResponse>(instance);
        }


        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'TransactionFee'
        /// </summary>
        [Fact]
        public void TransactionFeeTest()
        {
            // TODO unit test for the property 'TransactionFee'
        }
        /// <summary>
        /// Test the property 'MiningPool'
        /// </summary>
        [Fact]
        public void MiningPoolTest()
        {
            // TODO unit test for the property 'MiningPool'
        }
        /// <summary>
        /// Test the property 'Tokens'
        /// </summary>
        [Fact]
        public void TokensTest()
        {
            // TODO unit test for the property 'Tokens'
        }
        /// <summary>
        /// Test the property 'Summary'
        /// </summary>
        [Fact]
        public void SummaryTest()
        {
            // TODO unit test for the property 'Summary'
        }

    }

}
