/*
 * Opdex Platform API
 *
 * The Opdex Platform Web API is an interface for querying information from the Opdex contract indexer and quoting Opdex smart contract transactions. The Opdex contract indexer is a job that continually runs and stores relevant broadcast transaction data, in a way that represents the current known state of the Opdex protocol at the present time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Opdex.Client.Client;
using Opdex.Client.Api;
// uncomment below to import models
//using Opdex.Client.Model;

namespace Opdex.Client.Test.Api
{
    /// <summary>
    ///  Class for testing TransactionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TransactionsApiTests : IDisposable
    {
        private TransactionsApi instance;

        public TransactionsApiTests()
        {
            instance = new TransactionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TransactionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TransactionsApi
            //Assert.IsType<TransactionsApi>(instance);
        }

        /// <summary>
        /// Test TransactionHashGet
        /// </summary>
        [Fact]
        public void TransactionHashGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string hash = null;
            //var response = instance.TransactionHashGet(hash);
            //Assert.IsType<TransactionResponse>(response);
        }

        /// <summary>
        /// Test TransactionReplayQuotePost
        /// </summary>
        [Fact]
        public void TransactionReplayQuotePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReplayQuoteRequest replayQuoteRequest = null;
            //var response = instance.TransactionReplayQuotePost(replayQuoteRequest);
            //Assert.IsType<TransactionQuoteResponse>(response);
        }

        /// <summary>
        /// Test TransactionsGet
        /// </summary>
        [Fact]
        public void TransactionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string wallet = null;
            //List<string> contracts = null;
            //List<TransactionEventType> eventTypes = null;
            //SortDirection? direction = null;
            //int? limit = null;
            //string cursor = null;
            //var response = instance.TransactionsGet(wallet, contracts, eventTypes, direction, limit, cursor);
            //Assert.IsType<TransactionsResponse>(response);
        }

        /// <summary>
        /// Test TransactionsPost
        /// </summary>
        [Fact]
        public void TransactionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NotifyBroadcastRequest notifyBroadcastRequest = null;
            //instance.TransactionsPost(notifyBroadcastRequest);
        }
    }
}
