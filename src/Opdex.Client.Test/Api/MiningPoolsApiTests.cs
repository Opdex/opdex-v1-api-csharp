/*
 * Opdex Platform API
 *
 * The Opdex Platform Web API is an interface for querying information from the Opdex contract indexer and quoting Opdex smart contract transactions. The Opdex contract indexer is a job that continually runs and stores relevant broadcast transaction data, in a way that represents the current known state of the Opdex protocol at the present time.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using Opdex.Client.Client;
using Opdex.Client.Api;
// uncomment below to import models
//using Opdex.Client.Model;

namespace Opdex.Client.Test.Api
{
    /// <summary>
    ///  Class for testing MiningPoolsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MiningPoolsApiTests : IDisposable
    {
        private MiningPoolsApi instance;

        public MiningPoolsApiTests()
        {
            instance = new MiningPoolsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MiningPoolsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MiningPoolsApi
            //Assert.IsType<MiningPoolsApi>(instance);
        }

        /// <summary>
        /// Test BuildCollectMiningRewardsQuote
        /// </summary>
        [Fact]
        public void BuildCollectMiningRewardsQuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.BuildCollectMiningRewardsQuote(pool);
            //Assert.IsType<TransactionQuoteResponse>(response);
        }

        /// <summary>
        /// Test BuildStartMiningQuote
        /// </summary>
        [Fact]
        public void BuildStartMiningQuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //QuoteStartMiningRequest quoteStartMiningRequest = null;
            //var response = instance.BuildStartMiningQuote(pool, quoteStartMiningRequest);
            //Assert.IsType<TransactionQuoteResponse>(response);
        }

        /// <summary>
        /// Test BuildStopMiningQuote
        /// </summary>
        [Fact]
        public void BuildStopMiningQuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //QuoteStopMiningRequest quoteStopMiningRequest = null;
            //var response = instance.BuildStopMiningQuote(pool, quoteStopMiningRequest);
            //Assert.IsType<TransactionQuoteResponse>(response);
        }

        /// <summary>
        /// Test GetMiningPool
        /// </summary>
        [Fact]
        public void GetMiningPoolTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.GetMiningPool(pool);
            //Assert.IsType<MiningPoolResponse>(response);
        }

        /// <summary>
        /// Test GetMiningPools
        /// </summary>
        [Fact]
        public void GetMiningPoolsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> liquidityPools = null;
            //MiningActivityStatus? miningStatus = null;
            //SortDirection? direction = null;
            //int? limit = null;
            //string cursor = null;
            //var response = instance.GetMiningPools(liquidityPools, miningStatus, direction, limit, cursor);
            //Assert.IsType<MiningPoolsResponse>(response);
        }
    }
}
